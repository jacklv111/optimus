// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	valueobject "github.com/jacklv111/optimus/pkg/resource-manager/optimus/value-object"
)

// MockResourceMgmtSvcInterface is a mock of ResourceMgmtSvcInterface interface.
type MockResourceMgmtSvcInterface struct {
	ctrl     *gomock.Controller
	recorder *MockResourceMgmtSvcInterfaceMockRecorder
}

// MockResourceMgmtSvcInterfaceMockRecorder is the mock recorder for MockResourceMgmtSvcInterface.
type MockResourceMgmtSvcInterfaceMockRecorder struct {
	mock *MockResourceMgmtSvcInterface
}

// NewMockResourceMgmtSvcInterface creates a new mock instance.
func NewMockResourceMgmtSvcInterface(ctrl *gomock.Controller) *MockResourceMgmtSvcInterface {
	mock := &MockResourceMgmtSvcInterface{ctrl: ctrl}
	mock.recorder = &MockResourceMgmtSvcInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceMgmtSvcInterface) EXPECT() *MockResourceMgmtSvcInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockResourceMgmtSvcInterface) Create(domain, workspace string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", domain, workspace)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockResourceMgmtSvcInterfaceMockRecorder) Create(domain, workspace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockResourceMgmtSvcInterface)(nil).Create), domain, workspace)
}

// GetById mocks base method.
func (m *MockResourceMgmtSvcInterface) GetById(id string) (valueobject.ResMgmtResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(valueobject.ResMgmtResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockResourceMgmtSvcInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockResourceMgmtSvcInterface)(nil).GetById), id)
}

// GetFirst mocks base method.
func (m *MockResourceMgmtSvcInterface) GetFirst(domain, workspace string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirst", domain, workspace)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFirst indicates an expected call of GetFirst.
func (mr *MockResourceMgmtSvcInterfaceMockRecorder) GetFirst(domain, workspace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirst", reflect.TypeOf((*MockResourceMgmtSvcInterface)(nil).GetFirst), domain, workspace)
}
