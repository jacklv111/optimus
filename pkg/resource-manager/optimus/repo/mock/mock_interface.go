// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	do "github.com/jacklv111/optimus/pkg/resource-manager/optimus/do"
)

// MockResourceMgmtRepoInterface is a mock of ResourceMgmtRepoInterface interface.
type MockResourceMgmtRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockResourceMgmtRepoInterfaceMockRecorder
}

// MockResourceMgmtRepoInterfaceMockRecorder is the mock recorder for MockResourceMgmtRepoInterface.
type MockResourceMgmtRepoInterfaceMockRecorder struct {
	mock *MockResourceMgmtRepoInterface
}

// NewMockResourceMgmtRepoInterface creates a new mock instance.
func NewMockResourceMgmtRepoInterface(ctrl *gomock.Controller) *MockResourceMgmtRepoInterface {
	mock := &MockResourceMgmtRepoInterface{ctrl: ctrl}
	mock.recorder = &MockResourceMgmtRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceMgmtRepoInterface) EXPECT() *MockResourceMgmtRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockResourceMgmtRepoInterface) Create(domain, workspace string) (do.ResourceManagementDo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", domain, workspace)
	ret0, _ := ret[0].(do.ResourceManagementDo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockResourceMgmtRepoInterfaceMockRecorder) Create(domain, workspace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockResourceMgmtRepoInterface)(nil).Create), domain, workspace)
}

// GetById mocks base method.
func (m *MockResourceMgmtRepoInterface) GetById(id string) (do.ResourceManagementDo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(do.ResourceManagementDo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockResourceMgmtRepoInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockResourceMgmtRepoInterface)(nil).GetById), id)
}

// GetFirst mocks base method.
func (m *MockResourceMgmtRepoInterface) GetFirst(domain, workspace string) (do.ResourceManagementDo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirst", domain, workspace)
	ret0, _ := ret[0].(do.ResourceManagementDo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFirst indicates an expected call of GetFirst.
func (mr *MockResourceMgmtRepoInterfaceMockRecorder) GetFirst(domain, workspace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirst", reflect.TypeOf((*MockResourceMgmtRepoInterface)(nil).GetFirst), domain, workspace)
}
