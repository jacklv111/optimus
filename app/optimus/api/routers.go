/*
 * optimus
 *
 * optimus api
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strings"

	"github.com/gin-gonic/gin"
	"github.com/jacklv111/optimus/app/optimus/view-object/openapi"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	router.MaxMultipartMemory = 32 << 20 // 32 MiB
	router.Use(gin.CustomRecovery(func(ctx *gin.Context, err interface{}) {
		if strings.Contains(err.(string), "invalid UUID") {
			// TODO: 选择合适错误码和 msg
			ctx.JSON(http.StatusBadRequest, openapi.Error{Code: "1", Message: err.(string)})
		}
	}))
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/api/open/v1/",
		Index,
	},

	{
		"CreateAnnotationTemplate",
		http.MethodPost,
		"/api/open/v1/annotation-templates",
		CreateAnnotationTemplate,
	},

	{
		"GetAnnoTemplateDetails",
		http.MethodGet,
		"/api/open/v1/annotation-templates/:annotationTemplateId/details",
		GetAnnoTemplateDetails,
	},

	{
		"UpdateAnnotationTemplate",
		http.MethodPut,
		"/api/open/v1/annotation-templates",
		UpdateAnnotationTemplate,
	},

	{
		"CreateDataset",
		http.MethodPost,
		"/api/open/v1/datasets",
		CreateDataset,
	},

	{
		"CreateDatasetPool",
		http.MethodPost,
		"/api/open/v1/datasets/:datasetId/pools",
		CreateDatasetPool,
	},

	{
		"CreateDatasetVersion",
		http.MethodPost,
		"/api/open/v1/datasets/:datasetId/versions",
		CreateDatasetVersion,
	},

	{
		"DeleteDataPoolItems",
		http.MethodDelete,
		"/api/open/v1/datasets/:datasetId/pools/:poolName/data-items",
		DeleteDataPoolItems,
	},

	{
		"DeleteDataset",
		http.MethodDelete,
		"/api/open/v1/datasets/:datasetId",
		DeleteDataset,
	},

	{
		"DeleteDatasetPool",
		http.MethodDelete,
		"/api/open/v1/datasets/:datasetId/pools/:poolName",
		DeleteDatasetPool,
	},

	{
		"DeleteDatasetVersion",
		http.MethodDelete,
		"/api/open/v1/datasets/:datasetId/versions/:versionName",
		DeleteDatasetVersion,
	},

	{
		"GetDataPoolItems",
		http.MethodGet,
		"/api/open/v1/datasets/:datasetId/pools/:poolName/data-items",
		GetDataPoolDataItems,
	},

	{
		"GetVersionDataItems",
		http.MethodGet,
		"/api/open/v1/datasets/:datasetId/versions/:versionName/data-items",
		GetVersionDataItems,
	},

	{
		"GetDatasetDetails",
		http.MethodGet,
		"/api/open/v1/datasets/:datasetId/details",
		GetDatasetDetails,
	},

	{
		"GetDatasetList",
		http.MethodGet,
		"/api/open/v1/datasets",
		GetDatasetList,
	},

	{
		"UpdateDataset",
		http.MethodPut,
		"/api/open/v1/datasets/:datasetId",
		UpdateDataset,
	},

	{
		"UploadDatasetZipData",
		http.MethodPost,
		"/api/open/v1/datasets/:datasetId/upload-zip",
		UploadDatasetZipData,
	},

	{
		"UploadZipToPool",
		http.MethodPost,
		"/api/open/v1/datasets/:datasetId/pools/:poolName/upload-zip",
		UploadZipToPool,
	},

	{
		"GetDataPoolStatistics",
		http.MethodGet,
		"/api/open/v1/datasets/:datasetId/pools/:poolName/statistics",
		GetDataPoolStatistics,
	},

	{
		"CreateDatasetAnnotationTemplate",
		http.MethodPost,
		"/api/open/v1/datasets/:datasetId/annotation-template",
		CreateDatasetAnnotationTemplate,
	},

	{
		"GetDatasetAnnotationTemplate",
		http.MethodGet,
		"/api/open/v1/datasets/:datasetId/annotation-template",
		GetDatasetAnnotationTemplate,
	},

	{
		"UpdateDatasetAnnotationTemplate",
		http.MethodPut,
		"/api/open/v1/datasets/:datasetId/annotation-template",
		UpdateDatasetAnnotationTemplate,
	},
}
